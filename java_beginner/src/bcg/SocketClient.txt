
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;
public class SocketClient {

/**
* @param args
* @throws IOException 
* @throws UnknownHostException 
*/
public static void main(String[] args) throws UnknownHostException, IOException {

//Socket Client 샘플
//====================================================

//Socket 객체생성 및 포트지정
Socket socket = new Socket("61.109.223.245", 10000);

//InputStream / OutputStream 객체 생성
InputStream inputStream = socket.getInputStream();
OutputStream outputStream = socket.getOutputStream();

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

//서버에 파일이름 전송 : 바이트 변환
Scanner scan=new Scanner(System.in);
loop:while(true){
	
System.out.println("전송할 파일명 입력");
String fileName=scan.next();
File f= new File(fileName);
outputStream.write(fileName.getBytes());

int readCount = 0;
byte[] buffer = new byte[10000000];

//파일 저장위치와 파일명 지정
System.out.println("저장할 파일의 이름 입력");
String fileName1=scan.next();
File downloadFile = new File("C://download2",fileName1);

//FileOutputStream객체 생성
FileOutputStream fileOutputStream = new FileOutputStream(downloadFile);

//inputStream으로 buffer 크기만큼 바이트코드를 읽어와서 
//readCount에 저장 / 없으면 반복종료
while( (readCount = inputStream.read(buffer)) != -1 ) {

//fileOutputStream으로 파일쓰기 : 읽어온 바이트크기만큼
fileOutputStream.write(buffer, 0, readCount);
 }
System.out.println("파일을 그만 받고 싶으실 땐 숫자 1키를 눌러주세요");
int i=scan.nextInt();
if(i==1)
break loop;

}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

//자원해제
outputStream.close();
inputStream.close();
socket.close();

}
}





