
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class SocketServer {

/**
* @param args
* @throws IOException 
*/
public static void main(String[] args) throws IOException {

//Socket Server 샘플
//====================================================

//ServerSocket 생성 : 포트지정
ServerSocket serverSocket = new ServerSocket(10000);

//Socket 객체생성 및 대기
Socket clientSocket = serverSocket.accept();

//InputStream / OutputStream 생성
InputStream inputStream = clientSocket.getInputStream();
OutputStream outputStream = clientSocket.getOutputStream();

//- - - - - - - - - - - - - - - - - - - - - - - - - -- - - - - - - -

int readCount = 0;
byte[] readBuffer = new byte[4096];

//Client로부터 파일이름 수신
readCount = inputStream.read(readBuffer);

//파일이름지정
String fileName = new String(readBuffer, 0, readCount);

//임시출력
System.out.println( "Client가 요청한 파일 : " + fileName );

//파일읽어들임
File file = new File("C:/", fileName);

//VM(FileInputStream)에게 읽어들일 파일을 전달
FileInputStream fileInputStream = new FileInputStream(file);

//파일의 길이 알아내기
int fileLength = (int) file.length();

//파일의 길이만큼의 바이트 배열 선언
byte[] buffer = new byte[fileLength];

//파일 읽어오기 : fileInputStream
fileInputStream.read(buffer);

//자원해제
fileInputStream.close();

//파일읽음
outputStream.write(buffer);

//- - - - - - - - - - - - - - - - - - - - - - - - - -- - - - - - - -

//자원해제
outputStream.close();
inputStream.close();
clientSocket.close();
serverSocket.close();
}

}
